#!/bin/zsh

PREVDIR="$(pwd)"

# cd into $SYSROOT so that $PWD is inside the chroot
pushd $SYSROOT
retval=1
# Execute raspbian binaries using the qemu-arm-static emulator, while chrooted
# to the sysroot.
# If we're running as the $RPXC_USER we need to sudo to root to perform the
# chroot, and then drop back down to the user afterwards.

function chrootdebug() {
  echo -e "\033[0;94mCHROOT\033[0;37m as uid\033[0;31m${RPXC_UID:-$UID}\033[0;37m into \033[0;96m${SYSROOT}\033[0;37m; cd \033[0;96m${PREVDIR#$SYSROOT}\033[0;0m"
}

if [[ -z "$RPXC_UID" ]] || [[ $UID == 0 ]]; then # don't set uid
    if [[ $PREVDIR == ${SYSROOT}* ]]; then # switch the cd
      chrootdebug
      chroot "${SYSROOT}" \
        "${QEMU_PATH}" /bin/sh -c "cd ${PREVDIR#$SYSROOT} && $@"
      retval=$?
    else
      chrootdebug
      chroot "${SYSROOT}" \
        "${QEMU_PATH}" /bin/sh -c "cd $PREVDIR && $@"
      retval=$?
    fi
else # use sudo for access without privs
    chrootdebug
    sudo -E chroot --userspec ${RPXC_UID}:${RPXC_GID} "${SYSROOT}" \
      "${QEMU_PATH}" /bin/sh -c "cd $PREVDIR && $@"
    retval=$?
fi

popd

exit $retval
